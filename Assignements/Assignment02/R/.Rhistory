pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
add_row(data_to_graph, Thr = TH, speedup = sp  )
#print(T)
#print(speedup)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
data_to_graph
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
add_row(data_to_graph, Thr = TH, Speedup = sp  )
#print(T)
#print(speedup)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
?add_row
?add_row
data_to_graph = tibble(Thr=integer(), Speedup=numeric())
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
add_row(data_to_graph, Thr = TH, Speedup = sp  )
#print(T)
#print(speedup)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
# add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(speedup)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
?add_row
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
# add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
?add_row
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
#Let's add thread number 1 manually
TP <- c(1,TP)
sp <- T1/TP
# add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
?add_row
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
?add_row
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
#print(TH)
#print(sp)
#print(data_to_graph)
data_to_graph = data.frame(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling(df.06)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
#print(TH)
#print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling(df.06)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
data_to_graph
#print(TH)
#print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
data_to_graph
#print(TH)
#print(sp)
#print(data_to_graph)
#print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
data_to_graph = tibble(Thr=integer(), Speedup=numeric())
data_to_graph
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
data_to_graph
#print(TH)
#print(sp)
#print(data_to_graph)
#print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
data_to_graph
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
data_to_graph <- tibble(Thr= TH, Speedup = sp)
#add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(T,speedup))
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
data_to_graph <- tibble(Thr= TH, Speedup = sp)
#add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(Thr,Speedup))
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
data_to_graph <- tibble(Thr= TH, Speedup = sp)
#add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(Thr,Speedup))
+ geom_point()
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
data_to_graph <- tibble(Thr= TH, Speedup = sp)
#add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
ggplot(data_to_graph, aes(Thr,Speedup)) + geom_point()
}
}
strongScaling(df.01)
strongScaling <- function(df){
df.times <- df %>%
group_by(N, THREADS) %>%
summarise(time = mean(TIME))
K <- unique(df.times$N)
TH <- unique(df.times$THREADS)
for (n in K){
df.temp <- filter(df.times, N == n)
T1 <- df.temp %>%
filter(THREADS == 1) %>%
pull(time)
TP <- df.temp %>%
filter(THREADS != 1) %>%
pull(time)
#print(T1)
#print(TP)
sp <- T1/TP
#Let's add speedup for 1 thread manually
sp <- c(1,sp)
data_to_graph <- tibble(Thr= TH, Speedup = sp)
#add_row(data_to_graph, Thr = TH, Speedup = sp  )
print(TH)
print(sp)
#print(data_to_graph)
print(data_to_graph)
print(ggplot(data_to_graph, aes(Thr,Speedup)) + geom_point())
}
}
strongScaling(df.01)
strongScaling(df.01)
