#!/bin/bash

#PBS -l nodes=1:ppn=20
#PBS -l walltime=00:15:00
#PBS -N perfRun
#PBS -o /home/fbrand/FHPC_2019-2020/Assignements/perfRun.out
#PBS -e /home/fbrand/FHPC_2019-2020/Assignements/perfErr.err


PROGRAM_1=01_array_sum
PROGRAM_2=06_touch_by_all
N=1000000000

module load gcc

cd /home/fbrand/FHPC_2019-2020/Assignements/Assignment02 

#We fix the number of threads to 20 and we use gcc as our default compiler
./compile ${PROGRAM_1}.c 20 gcc
./compile ${PROGRAM_2}.c 20 gcc

if [ -e perf_${PROGRAM_1}.txt ]
then
    perf_${PROGRAM_1}.txt
fi

if [ -e perf_${PROGRAM_2}.txt ]
then
    perf_${PROGRAM_2}.txt
fi

perf stat -o perf_${PROGRAM_1}.txt -d -x";" -r5 ./${PROGRAM_1}-PARALLEL $N 
perf stat -o perf_${PROGRAM_2}.txt -d -x";" -r5 ./${PROGRAM_2}-PARALLEL $N 



if [ -e perf_${PROGRAM_1}.csv ]
then
    rm perf_${PROGRAM_1}.csv
fi

if [ -e perf_${PROGRAM_2}.csv ]
then
    rm perf_${PROGRAM_2}.csv
fi




#Touch first
CYCLES=$(grep "cycles;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_CYCLES=$(grep "cycles;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )
INSTRUCTIONS=$(grep "instructions;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_INSTRUCTIONS=$(grep "instructions;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )
L1CACHE=$(grep "L1-dcache-loads;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_L1CACHE=$(grep "L1-dcache-loads;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )
LLCACHE=$(grep "LLC-loads;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_LLCACHE=$(grep "LLC-loads;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )
L1CACHEMISS=$(grep "L1-dcache-load-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_L1CACHEMISS=$(grep "L1-dcache-load-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f3)
LLCACHEMISS=$(grep "LLC-load-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_LLCACHEMISS=$(grep "LLC-load-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f3)
BRANCHES=$(grep "branches;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_BRANCHES=$(grep "branches;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )
BRANCH_MISSES=$(grep "branch-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f1 )
STD_BRANCH_MISSES=$(grep "branch-misses;" perf_${PROGRAM_1}.txt | cut -d";" -f3 )

echo "cycles;${CYCLES};${STD_CYCLES};touch_first" >> perf_${PROGRAM_1}.csv
echo "instructions;${INSTRUCTIONS};${STD_INSTRUCTIONS};touch_first" >> perf_${PROGRAM_1}.csv
echo "L1cache;${L1CACHE};${STD_L1CACHE};touch_first" >> perf_${PROGRAM_1}.csv
echo "LLcache;${LLCACHE};${STD_LLCACHE};touch_first" >> perf_${PROGRAM_1}.csv
echo "L1cache-miss;${L1CACHEMISS};${STD_L1CACHEMISS};touch_first" >> perf_${PROGRAM_1}.csv
echo "LLcache-miss;${LLCACHEMISS};${STD_LLCACHEMISS};touch_first" >> perf_${PROGRAM_1}.csv
echo "branches;${BRANCHES};${STD_BRANCHES};touch_first" >> perf_${PROGRAM_1}.csv
echo "branches-miss;${BRANCH_MISSES};${STD_BRANCH_MISSES};touch_first" >> perf_${PROGRAM_1}.csv


#Touch by all
CYCLES=$(grep "cycles;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_CYCLES=$(grep "cycles;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )
INSTRUCTIONS=$(grep "instructions;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_INSTRUCTIONS=$(grep "instructions;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )
L1CACHE=$(grep "L1-dcache-loads;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_L1CACHE=$(grep "L1-dcache-loads;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )
LLCACHE=$(grep "LLC-loads;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_LLCACHE=$(grep "LLC-loads;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )
L1CACHEMISS=$(grep "L1-dcache-load-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_L1CACHEMISS=$(grep "L1-dcache-load-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f3)
LLCACHEMISS=$(grep "LLC-load-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_LLCACHEMISS=$(grep "LLC-load-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f3)
BRANCHES=$(grep "branches;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_BRANCHES=$(grep "branches;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )
BRANCH_MISSES=$(grep "branch-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f1 )
STD_BRANCH_MISSES=$(grep "branch-misses;" perf_${PROGRAM_2}.txt | cut -d";" -f3 )


echo "cycles;${CYCLES};${STD_CYCLES};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "instructions;${INSTRUCTIONS};${STD_INSTRUCTIONS};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "L1cache;${L1CACHE};${STD_L1CACHE};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "LLcache;${LLCACHE};${STD_LLCACHE};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "L1cache-miss;${L1CACHEMISS};${STD_L1CACHEMISS};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "L1cache-miss;${LLCACHEMISS};${STD_LLCACHEMISS};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "branches;${BRANCHES};${STD_BRANCHES};touch_by_all" >> perf_${PROGRAM_2}.csv
echo "branches-miss;${BRANCH_MISSES};${STD_BRANCH_MISSES};touch_by_all" >> perf_${PROGRAM_2}.csv
